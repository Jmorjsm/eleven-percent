name: cd

on:
  push:
    # tags:
      # - '*'

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ['7.0']
        channel: [ Dev, Prod_Sideload, Prod_Store ]
        targetPlatform: [ Any CPU ]
        include:
          
          # includes the following variables for the matrix leg matching Dev
          - channel: Dev
            ChannelName: Dev
            Configuration: Debug
            #DistributionUrl: https://microsoft.github.io/github-actions-for-desktop-apps-distribution-dev
            MsixPackageId: ElevenPercent.Dev
            MsixPublisherId: CN=jmorjsm
            MsixPackageDisplayName: ElevenPercent (Dev)
          
          # includes the following variables for the matrix leg matching Prod_Sideload
          - channel: Prod_Sideload
            Configuration: Release
            ChannelName: Prod_Sideload
            #DistributionUrl: https://microsoft.github.io/github-actions-for-desktop-apps-distribution-prod
            MsixPackageId: ElevenPercent.ProdSideload
            MsixPublisherId: CN=jmorjsm
            MsixPackageDisplayName: ElevenPercent (ProdSideload)
          
          # includes the following variables for the matrix leg matching Prod_Store
          - channel: Prod_Store
            Configuration: Release
            ChannelName: Prod_Store
            DistributionUrl:
            MsixPackageId: ElevenPercent.ProdStore
            MsixPublisherId: CN=jmorjsm
            MsixPackageDisplayName: ElevenPercent (ProdStore)

    steps: # Update the appxmanifest before build by setting the per-channel values set in the matrix.
      - uses: actions/checkout@v3
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.201
          
#       - name: Update manifest version
#         run: |
#           [xml]$manifest = get-content ".\$env:Wap_Project_Directory\Package.appxmanifest"
#           $manifest.Package.Identity.Version = "$env:NBGV_SimpleVersion.0"
#           $manifest.Package.Identity.Name = "${{ matrix.MsixPackageId }}"
#           $manifest.Package.Identity.Publisher = "${{ matrix.MsixPublisherId }}"
#           $manifest.Package.Properties.DisplayName = "${{ matrix.MsixPackageDisplayName }}"
#           $manifest.Package.Applications.Application.VisualElements.DisplayName = "${{ matrix.MsixPackageDisplayName }}"
#           $manifest.save(".\$env:Wap_Project_Directory\Package.appxmanifest")

      - name: Set env variables
        run : |
          "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $env:GITHUB_ENV
 
      # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.0
      
      # Restore the application
      - name:  Restore the application to populate the obj folder
        run: msbuild $env:Solution_Path /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: Debug

      # Build the Windows Application Packaging project for Dev and Prod_Sideload
      - name: Build the Windows Application Packaging Project (wapproj) for ${{ matrix.ChannelName }}
        run: msbuild $env:Solution_Path /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode # /p:AppxBundle=$env:AppxBundle /p:PackageCertificateKeyFile=$env:SigningCertificate /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
        if: matrix.ChannelName != 'Prod_Store'
        env:
          AppxBundle: Never
          AppInstallerUri: ${{ matrix.DistributionUrl }}
          BuildMode: SideLoadOnly
          Configuration: ${{ matrix.Configuration }}
          GenerateAppInstallerFile: True
          TargetPlatform: ${{ matrix.targetplatform }}

      # Build the Windows Application Packaging project for Prod_Store
      - name: Build the Windows Application Packaging Project (wapproj) for ${{ matrix.ChannelName }}
        run: msbuild $env:Solution_Path /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode # /p:AppxBundle=$env:AppxBundle /p:GenerateAppInstallerFile=$env:GenerateAppInstallerFile /p:AppxPackageSigningEnabled=$env:AppxPackageSigningEnabled
        if: matrix.ChannelName == 'Prod_Store'
        env:
          AppxBundle: Never
          AppxPackageSigningEnabled: False
          BuildMode: StoreOnly
          Configuration: ${{ matrix.Configuration }}
          GenerateAppInstallerFile: False
          TargetPlatform: ${{ matrix.targetplatform }}
      
      - name: tree
        run : |
          tree .

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r ElevenPercent.zip ElevenPercent\bin\${{matrix.Configuration}}\net7.0-windows\
    
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ElevenPercent.zip
